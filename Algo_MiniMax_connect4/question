How to determine Minimax

1. Two players and both play "optimally!!"
2. player 1 seek its max, and player 2 seek its max 
3. Translate player1 seeks its max into: 
    player 1 max = P1 current score - (player 2 seek max)



Algo notations:
1. from the left to the right: label columns of board: 1,2,3,4...
2. Position notation: denote the sequence played by column label: 4 4 1 3. means play col 4, then col 4 then col 1 then col 3
3. Position score: assume everyone plays optimally. 
    score>0 means current player  can wine. 
    score = 1 means current player wins with his last stone, 
          =2 means he wins with opponent's second last stone
    score = Null means game ends with draw
    score < 0 means current player lose
    score = -1 means the opponent wins at its last move
    score = -2 means the opponent wins with its 2nd last move, etc.
4. alpha-beta prunning: introduces a score window [alpha;beta' within which you search the actual score of  a position


references:
miniMax + alpha-beta prunning
http://blog.gamesolver.org/
https://towardsdatascience.com/creating-the-perfect-connect-four-ai-bot-c165115557b0
https://www.cs.swarthmore.edu/~bryce/cs63/s17/labs/03.html

miniMax intro:
https://en.wikipedia.org/wiki/Minimax


class poster with problem description
http://web.stanford.edu/class/archive/cs/cs221/cs221.1192/2018/restricted/posters/yuex/poster.pdf

some solutions
https://github-dotcom.gateway.web.tr/lsglucas/connect-four

https://github.com/kupshah/Connect-Four

https://github.com/erikackermann/Connect-Four


A player who connects four of their pieces in a line (orthogonal or diagonal) wins. 
The examples below show the starting board, a board where white has won, and one where black has won (winning connections highlighted in blue).

 -------------
|· · · · · · ·|
|· · · · · · ·|
|· · · · · · ·|
|· · · · · · ·|
|· · · · · · ·|
|· · · · · · ·|
 -------------

 -------------
|· · · ● · · ·|
|· · · ○ · · ·|
|· · ● ● ○ · ·|
|○ ● ○ ○ ● · ·|
|● ○ ○ ○ ● · ·|
|○ ○ ● ○ ● · ●|
 -------------

 -------------
|● · ○ · ○ · ·|
|● · ○ · ○ · ●|
|● · ● ● ○ ● ●|
|○ ● ○ ● ● ○ ○|
|● ○ ● ○ ● ○ ●|
|● ○ ○ ● ○ ○ ○|
 -------------


Steps:

1. Use the bounded min-max algorithm to play Connect Four.
1. Improve the efficiency of min-max by adding alpha-beta pruning.
1. Create an informative static evaluation function for Connect Four.

